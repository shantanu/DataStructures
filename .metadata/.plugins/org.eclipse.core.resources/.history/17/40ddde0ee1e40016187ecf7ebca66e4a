package PSet2;

import llstatic.Node;

public class StaticLL {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		IntNode head = new IntNode(4, null);
		printLL(head);
		head = addBeforeLast(head, 5);
		printLL(head);
		head = addBefore(head, 4, 6);
		printLL(head);
		head = addBefore(head, 8, 7);
		printLL(head);
		head = addBefore(head, 5, 7);
		printLL(head);
		head = addBefore(head, 4, 8);
		printLL(head);
		head = addBeforeLast(head, 9);
		printLL(head);
		
	}
	
	public static void printLL (IntNode head) {
		for (IntNode n = head; n != null; n = n.next){
			System.out.println(n.data);
			
		}System.out.println("----------");
		
	}
	//PROBLEM 1
	public static IntNode addBefore(IntNode front, int target, int newItem) {
		if (front == null) return null;
		if (front.data == target) {
			return new IntNode(newItem, front);
		}
		IntNode prev = front;
		for (IntNode n = front.next; n != null; n = n.next){
			if (n.data == target) {
				prev.next = new IntNode(newItem, n);
				return front;
			}
			prev = prev.next;
		}
		return front;
	}
	
	//PROBLEM 2
	public static IntNode addBeforeLast(IntNode front, int item) {
		if (front == null) return null;
		if (front.next == null)
			return new IntNode(item, front);
		IntNode prev = front;
		for (IntNode n = front.next; n != null; n = n.next) {
			if (n.next == null) {
				prev.next = new IntNode(item, n);
				return front;
			}
			prev = prev.next;
		}
		return front;
		
	}

}
